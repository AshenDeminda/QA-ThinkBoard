name: SonarQube
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('thinkboard/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci
      
      - name: Build frontend
        working-directory: ./frontend
        run: npm run build
      
      - name: Start frontend server
        working-directory: ./frontend
        run: |
          npm run dev &
          echo $! > frontend.pid
        
      - name: Wait for frontend server
        run: |
          echo "Waiting for frontend server to start..."
          timeout 60 bash -c 'until curl --output /dev/null --silent --head --fail http://localhost:5173; do echo "Waiting for frontend..."; sleep 2; done'
          echo "Frontend server is ready!"
      
      - name: Build and analyze backend
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SPRING_PROFILES_ACTIVE: ci
        working-directory: ./thinkboard
        run: |
          # Run only unit tests, exclude UI tests for SonarQube analysis
          mvn -B clean compile test -Dtest="!UiTests" verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=AshenDeminda_QA-ThinkBoard -Dsonar.organization=ashendeminda
      
      - name: Run UI Tests (Selenium)
        working-directory: ./thinkboard
        run: |
          # Run only UI tests separately
          mvn -B test -Dtest="UiTests"
        continue-on-error: true  # Don't fail the build if UI tests fail
      
      - name: Stop frontend server
        if: always()
        run: |
          if [ -f frontend/frontend.pid ]; then
            kill $(cat frontend/frontend.pid) || true
            rm frontend/frontend.pid
          fi