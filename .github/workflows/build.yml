name: SonarQube
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('thinkboard/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci
      
      - name: Build frontend
        working-directory: ./frontend
        run: npm run build
      
      - name: Build and analyze backend (SonarQube)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SPRING_PROFILES_ACTIVE: ci
        working-directory: ./thinkboard
        run: |
          # Run only unit tests, exclude UI tests for SonarQube analysis
          mvn -B clean compile test -Dtest="!UiTests" verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=AshenDeminda_QA-ThinkBoard -Dsonar.organization=ashendeminda
      
      - name: Try to start frontend server (for UI tests)
        id: frontend
        continue-on-error: true
        working-directory: ./frontend
        run: |
          echo "Starting frontend server..."
          nohup npm run dev > frontend.log 2>&1 &
          echo $! > frontend.pid
          sleep 5
        
      - name: Wait for frontend server
        id: wait-frontend
        continue-on-error: true
        run: |
          echo "Waiting for frontend server to start..."
          for i in {1..30}; do
            if curl --output /dev/null --silent --head --fail http://localhost:5173; then
              echo "Frontend server is ready!"
              echo "frontend-ready=true" >> $GITHUB_OUTPUT
              exit 0
            fi
            echo "Attempt $i/30: Waiting for frontend..."
            sleep 2
          done
          echo "Frontend server failed to start within 60 seconds"
          echo "Frontend logs:"
          cat frontend/frontend.log || echo "No logs available"
          echo "frontend-ready=false" >> $GITHUB_OUTPUT
          exit 1
      
      - name: Run UI Tests (Selenium) - Optional
        if: steps.wait-frontend.outputs.frontend-ready == 'true'
        working-directory: ./thinkboard
        run: |
          echo "Running UI tests since frontend is available..."
          mvn -B test -Dtest="UiTests"
        continue-on-error: true
      
      - name: Skip UI Tests (Frontend unavailable)
        if: steps.wait-frontend.outputs.frontend-ready != 'true'
        run: |
          echo "⚠️ Skipping UI tests - frontend server not available"
          echo "This is expected in CI environment and doesn't affect SonarQube analysis"
      
      - name: Stop frontend server
        if: always()
        run: |
          if [ -f frontend/frontend.pid ]; then
            kill $(cat frontend/frontend.pid) || true
            rm frontend/frontend.pid
          fi